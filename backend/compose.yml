services:
  db:
    image: "postgres:17-alpine"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /pgdata
    volumes:
      - type: volume
        source: db
        target: /pgdata
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 10s
      interval: 10s
      retries: 6

  redis:
    image: "redis:7-alpine"
    expose:
      - 6379
    ports:
      - "6379:6379"
    volumes:
      - type: volume
        source: redis
        target: /data
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      start_period: 5s
      interval: 10s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: ".env"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379

volumes:
  db:
  redis:
